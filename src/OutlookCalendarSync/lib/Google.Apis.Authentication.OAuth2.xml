<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Apis.Authentication.OAuth2</name>
    </assembly>
    <members>
        <member name="T:Google.Apis.Authentication.OAuth2.GoogleAuthenticationServer">
            <summary>
            Class containing information about the Google OAuth2 authentication server.
            </summary>
        </member>
        <member name="P:Google.Apis.Authentication.OAuth2.GoogleAuthenticationServer.Description">
            <summary>
            Returns the description for the Google Authorization Server.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Google.Apis.Authentication.OAuth2.DotNetOpenAuth.NativeApplicationClient">
            <summary>
            The OAuth2 client for use by native applications. This is a partial implementation which 
            should be used until the feature has been fully implemented in DotNetOpenAuth.
            </summary>
        </member>
        <member name="F:Google.Apis.Authentication.OAuth2.DotNetOpenAuth.NativeApplicationClient.OutOfBandCallbackUrl">
            <summary>
            Represents a callback URL which points to a special out of band page used for native OAuth2 authorization.
            This URL will cause the authorization code to appear in the title of the window.
            </summary>
            <remarks>See http://code.google.com/apis/accounts/docs/OAuth2.html for more information.</remarks>
        </member>
        <member name="M:Google.Apis.Authentication.OAuth2.DotNetOpenAuth.NativeApplicationClient.#ctor(DotNetOpenAuth.OAuth2.AuthorizationServerDescription,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNetOpenAuth.OAuth2.UserAgentClient"/> class.
            </summary>
            <param name="authorizationServer">The token issuer.</param>
            <param name="clientIdentifier">The client identifier.</param>
            <param name="clientSecret">The client secret.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Google.Apis.Authentication.OAuth2.DotNetOpenAuth.NativeApplicationClient.#ctor(DotNetOpenAuth.OAuth2.AuthorizationServerDescription)" -->
        <member name="M:Google.Apis.Authentication.OAuth2.DotNetOpenAuth.NativeApplicationClient.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:DotNetOpenAuth.OAuth2.UserAgentClient"/> class.
            </summary>
            <param name="authorizationEndpoint">The authorization endpoint.</param>
        </member>
        <member name="M:Google.Apis.Authentication.OAuth2.DotNetOpenAuth.NativeApplicationClient.RequestUserAuthorization(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates the URL which should be used by the user to request the initial authorization.
            Uses the default Out-of-band-URI as a callback.
            </summary>
            <param name="scope">Set of requested scopes</param>
            <returns>URI pointing to the authorization server</returns>
        </member>
        <member name="M:Google.Apis.Authentication.OAuth2.DotNetOpenAuth.NativeApplicationClient.RequestUserAuthorization">
            <summary>
            Creates the URL which should be used by the user to request the initial authorization.
            Uses the default Out-of-band-URI as a callback.
            </summary>
            <returns>URI pointing to the authorization server</returns>
        </member>
        <member name="M:Google.Apis.Authentication.OAuth2.DotNetOpenAuth.NativeApplicationClient.ProcessUserAuthorization(System.String,DotNetOpenAuth.OAuth2.IAuthorizationState)">
            <summary>
            Uses the provided authorization code to create an authorization state.
            </summary>
            <param name="authCode">The authorization code for getting an access token.</param>
            <param name="authorizationState">The authorization.  Optional.</param>
            <returns>The granted authorization, or <c>null</c> if the authorization was null or rejected.</returns>
        </member>
        <member name="M:Google.Apis.Authentication.OAuth2.DotNetOpenAuth.NativeApplicationClient.ProcessUserAuthorization(System.String)">
            <summary>
            Uses the provided authorization code to create an authorization state.
            </summary>
            <param name="authCode">The authorization code for getting an access token.</param>
            <returns>The granted authorization, or <c>null</c> if the authorization was null or rejected.</returns>
        </member>
        <member name="T:Google.Apis.Authentication.OAuth2.OAuth2Authenticator`1">
            <summary>
            Implements an OAuth2 authenticator using the DotNetOpenAuth library.
            </summary>
        </member>
        <member name="M:Google.Apis.Authentication.OAuth2.OAuth2Authenticator`1.#ctor(`0,System.Func{`0,DotNetOpenAuth.OAuth2.IAuthorizationState})">
            <summary>
            Creates a new OAuth2 authenticator.
            </summary>
            <param name="tokenProvider">The client which is used for requesting access and refresh tokens.</param>
            <param name="authProvider">The method which provides the initial authorization for the provider.</param>
        </member>
        <member name="M:Google.Apis.Authentication.OAuth2.OAuth2Authenticator`1.LoadAccessToken">
            <summary>
            Checks if an access token has been set. If this is not the case, this method will use the specified
            State provider to generate a new AuthorizationState.
            </summary>
        </member>
        <member name="P:Google.Apis.Authentication.OAuth2.OAuth2Authenticator`1.State">
            <summary>
            The current state of this authenticator
            </summary>
        </member>
        <member name="P:Google.Apis.Authentication.OAuth2.OAuth2Authenticator`1.NoCaching">
            <summary>
            If this option is set to true, the authorization state will only last for a single request, and
            authorization will be re-requested for every additional request.
            </summary>
            <remarks>
            Will clear the current state if set to true. Can be used by Webserver-Applications
            to allow multiple AuthorizationStates/users.
            </remarks>
        </member>
    </members>
</doc>
